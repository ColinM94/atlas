/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SectionsSectionsRouteImport } from './routes/_sections/_sections'
import { Route as SectionsTasksIndexRouteImport } from './routes/_sections/tasks/index'
import { Route as SectionsSettingsIndexRouteImport } from './routes/_sections/settings/index'
import { Route as SectionsHabitsIndexRouteImport } from './routes/_sections/habits/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SectionsSectionsRoute = SectionsSectionsRouteImport.update({
  id: '/_sections/_sections',
  getParentRoute: () => rootRouteImport,
} as any)
const SectionsTasksIndexRoute = SectionsTasksIndexRouteImport.update({
  id: '/_sections/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const SectionsSettingsIndexRoute = SectionsSettingsIndexRouteImport.update({
  id: '/_sections/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const SectionsHabitsIndexRoute = SectionsHabitsIndexRouteImport.update({
  id: '/_sections/habits/',
  path: '/habits/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/habits': typeof SectionsHabitsIndexRoute
  '/settings': typeof SectionsSettingsIndexRoute
  '/tasks': typeof SectionsTasksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/habits': typeof SectionsHabitsIndexRoute
  '/settings': typeof SectionsSettingsIndexRoute
  '/tasks': typeof SectionsTasksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_sections/_sections': typeof SectionsSectionsRoute
  '/_sections/habits/': typeof SectionsHabitsIndexRoute
  '/_sections/settings/': typeof SectionsSettingsIndexRoute
  '/_sections/tasks/': typeof SectionsTasksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/habits' | '/settings' | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/habits' | '/settings' | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/_sections/_sections'
    | '/_sections/habits/'
    | '/_sections/settings/'
    | '/_sections/tasks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SectionsSectionsRoute: typeof SectionsSectionsRoute
  SectionsHabitsIndexRoute: typeof SectionsHabitsIndexRoute
  SectionsSettingsIndexRoute: typeof SectionsSettingsIndexRoute
  SectionsTasksIndexRoute: typeof SectionsTasksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sections/_sections': {
      id: '/_sections/_sections'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SectionsSectionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sections/tasks/': {
      id: '/_sections/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof SectionsTasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sections/settings/': {
      id: '/_sections/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SectionsSettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sections/habits/': {
      id: '/_sections/habits/'
      path: '/habits'
      fullPath: '/habits'
      preLoaderRoute: typeof SectionsHabitsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SectionsSectionsRoute: SectionsSectionsRoute,
  SectionsHabitsIndexRoute: SectionsHabitsIndexRoute,
  SectionsSettingsIndexRoute: SectionsSettingsIndexRoute,
  SectionsTasksIndexRoute: SectionsTasksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
